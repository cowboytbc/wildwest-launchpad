name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Inject GitHub token directly into secure-config.js
      env:
        WTFDUDE: ${{ secrets.WTFDUDE }}
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        SOLANA_RPC_ENDPOINT: ${{ secrets.SOLANA_RPC_ENDPOINT }}
        BASE_RPC_ENDPOINT: ${{ secrets.BASE_RPC_ENDPOINT }}
      run: |
        echo "🔧 Creating production token configuration file..."
        echo "📍 Current working directory: $(pwd)"
        echo "📁 Files in js/ directory before injection:"
        ls -la js/
        echo ""
        echo "🔍 Original token-config.js content:"
        cat js/token-config.js
        echo ""
        
        # Check if the secrets are available
        if [ -z "$WTFDUDE" ]; then
          echo "❌ ERROR: WTFDUDE secret is not set or is empty"
        else
          echo "✅ WTFDUDE secret is available (length: ${#WTFDUDE})"
        fi
        
        if [ -z "$PERSONAL_ACCESS_TOKEN" ]; then
          echo "❌ ERROR: PERSONAL_ACCESS_TOKEN secret is not set or is empty"
        else
          echo "✅ PERSONAL_ACCESS_TOKEN secret is available (length: ${#PERSONAL_ACCESS_TOKEN})"
        fi
        
        # Use WTFDUDE as the main token for banner operations
        GITHUB_TOKEN="${WTFDUDE:-$PERSONAL_ACCESS_TOKEN}"
        
        if [ -z "$GITHUB_TOKEN" ]; then
          echo "❌ ERROR: No GitHub token available"
          echo "🔧 Please configure WTFDUDE or PERSONAL_ACCESS_TOKEN secret"
          exit 1
        fi
        
        # Create production token config by overwriting the development file
        cat > js/token-config.js << EOF
        // Production token configuration - injected at build time
        window.PRODUCTION_CONFIG = {
          token: "$GITHUB_TOKEN",
          environment: 'production'
        };
        console.log('🚀 PRODUCTION BUILD - Token injected at build time');
        console.log('✅ Production token configuration loaded');
        EOF
        
        echo "📁 Files in js/ directory after injection:"
        ls -la js/
        echo ""
        echo "🔍 NEW token-config.js content:"
        cat js/token-config.js
        echo ""
        echo "🔍 Token verification:"
        if grep -q "environment: 'production'" js/token-config.js; then
          echo "✅ Production environment detected"
        else
          echo "❌ Still in development mode"
        fi
        echo "🔍 Token length check:"
        grep -o 'token: "[^"]*"' js/token-config.js | wc -c
        echo "🔍 Environment check:"
        grep "environment:" js/token-config.js
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
