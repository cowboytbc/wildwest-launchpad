name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Config with Secrets
        run: |
          mkdir -p js
          
          # First, let's see what files exist
          echo "=== BEFORE REMOVAL ==="
          ls -la js/
          
          # Remove existing file first to ensure clean overwrite
          rm -f js/production-config.js
          
          echo "=== AFTER REMOVAL ==="
          ls -la js/
          
          # Create the new config file line by line
          echo "// GENERATED BY GITHUB ACTIONS - $(date)" > js/production-config.js
          echo "(function() {" >> js/production-config.js
          echo "  'use strict';" >> js/production-config.js
          echo "  if (window.PRODUCTION_CONFIG) return;" >> js/production-config.js
          echo "  window.PRODUCTION_CONFIG = {" >> js/production-config.js
          echo "    rpc: {" >> js/production-config.js
          echo "      solana: '${{ secrets.SOLANA_RPC_ENDPOINT }}'," >> js/production-config.js
          echo "      base: '${{ secrets.BASE_RPC_ENDPOINT }}'" >> js/production-config.js
          echo "    }," >> js/production-config.js
          echo "    injectedAt: new Date().toISOString()," >> js/production-config.js
          echo "    source: 'github-actions'" >> js/production-config.js
          echo "  };" >> js/production-config.js
          echo "  window.RPC_CONFIG = {" >> js/production-config.js
          echo "    getSolanaEndpoint: function() {" >> js/production-config.js
          echo "      if (!window.PRODUCTION_CONFIG || !window.PRODUCTION_CONFIG.rpc.solana) {" >> js/production-config.js
          echo "        throw new Error('CRITICAL: QuickNode Solana endpoint not available.');" >> js/production-config.js
          echo "      }" >> js/production-config.js
          echo "      return window.PRODUCTION_CONFIG.rpc.solana;" >> js/production-config.js
          echo "    }," >> js/production-config.js
          echo "    getBaseEndpoint: function() {" >> js/production-config.js
          echo "      if (!window.PRODUCTION_CONFIG || !window.PRODUCTION_CONFIG.rpc.base) {" >> js/production-config.js
          echo "        throw new Error('CRITICAL: QuickNode Base endpoint not available.');" >> js/production-config.js
          echo "      }" >> js/production-config.js
          echo "      return window.PRODUCTION_CONFIG.rpc.base;" >> js/production-config.js
          echo "    }" >> js/production-config.js
          echo "  };" >> js/production-config.js
          echo "  console.log('Production config injected by GitHub Actions.');" >> js/production-config.js
          echo "})();" >> js/production-config.js
          
          echo "=== FINAL FILE LIST ==="
          ls -la js/
          
          echo "=== GENERATED CONFIG FILE ==="
          cat js/production-config.js
          echo "=== END CONFIG FILE ==="
          
          # Also create a test file to verify deployment
          echo "Deployment test - $(date)" > deployment-verification.txt
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4