name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Inject GitHub token directly into secure-config.js
      env:
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        SOLANA_RPC_ENDPOINT: ${{ secrets.SOLANA_RPC_ENDPOINT }}
        BASE_RPC_ENDPOINT: ${{ secrets.BASE_RPC_ENDPOINT }}
      run: |
        echo "🔧 Injecting production token directly into secure-config.js..."
        
        # Use sed to inject the production token at the beginning of getServiceTokenDirect method
        sed -i 's/getServiceTokenDirect() {/getServiceTokenDirect() {\
    \/\/ Method 0: Production token from GitHub Secrets (injected at build time)\
    const PRODUCTION_TOKEN = "${{ secrets.PERSONAL_ACCESS_TOKEN }}";\
    if (PRODUCTION_TOKEN \&\& PRODUCTION_TOKEN.length > 10) {\
      console.log("✅ Production GitHub token loaded from build injection");\
      return PRODUCTION_TOKEN;\
    }/g' js/secure-config.js
        
        # Add production build marker to constructor
        sed -i 's/console\.log("🔍 SecureConfig Debug Info:");/console.log("🔍 SecureConfig Debug Info:");\
        console.log("🚀 PRODUCTION BUILD - Token injected at build time");/g' js/secure-config.js
        
        # Verify the injection worked
        echo "🔍 Verifying token injection:"
        grep -A 3 "PRODUCTION_TOKEN" js/secure-config.js | head -5
        echo ""
        echo "🔍 Checking for production marker:"
        grep "PRODUCTION BUILD" js/secure-config.js
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
